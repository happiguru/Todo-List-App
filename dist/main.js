/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/date-fns/esm/index.js":
/*!********************************************!*\
  !*** ./node_modules/date-fns/esm/index.js ***!
  \********************************************/
/***/ (() => {

eval("throw new Error(\"Module build failed: Error: ENOENT: no such file or directory, open '/home/hguruman/MICROVERSE/js/Todo-List-App/node_modules/date-fns/esm/index.js'\");\n\n//# sourceURL=webpack://Todo-List-App/./node_modules/date-fns/esm/index.js?");

/***/ }),

/***/ "./src/javascript/index.js":
/*!*********************************!*\
  !*** ./src/javascript/index.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_interface__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/interface */ \"./src/javascript/modules/interface.js\");\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', _modules_interface__WEBPACK_IMPORTED_MODULE_0__.default.loadHomepage);\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/index.js?");

/***/ }),

/***/ "./src/javascript/modules/interface.js":
/*!*********************************************!*\
  !*** ./src/javascript/modules/interface.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ UI\n/* harmony export */ });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/index.js\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storage */ \"./src/javascript/modules/storage.js\");\n/* harmony import */ var _project_prototype__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./project_prototype */ \"./src/javascript/modules/project_prototype.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./tasks */ \"./src/javascript/modules/tasks.js\");\n\r\n\r\n\r\n\r\n\r\nclass UI {\r\n  // LOADING CONTENT\r\n\r\n  static loadHomepage() {\r\n    UI.loadProjects();\r\n    UI.initProjectButtons();\r\n    UI.openProject('Inbox', document.getElementById('button-inbox-projects'));\r\n    document.addEventListener('keydown', UI.handleKeyboard);\r\n  }\r\n\r\n  static loadProjects() {\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList()\r\n      .getProjects()\r\n      .forEach((project) => {\r\n        if (\r\n          project.name !== 'Inbox'\r\n          && project.name !== 'Today'\r\n          && project.name !== 'This week'\r\n        ) {\r\n          UI.createProject(project.name);\r\n        }\r\n      });\r\n\r\n    UI.initAddProjectButtons();\r\n  }\r\n\r\n  static loadTasks(projectName) {\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList()\r\n      .getProject(projectName)\r\n      .getTasks()\r\n      .forEach((task) => UI.createTask(task.name, task.dueDate));\r\n\r\n    if (projectName !== 'Today' && projectName !== 'This week') {\r\n      UI.initAddTaskButtons();\r\n    }\r\n  }\r\n\r\n  static loadProjectContent(projectName) {\r\n    const projectPreview = document.getElementById('project-preview');\r\n    projectPreview.innerHTML = `\r\n        <h1 id=\"project-name\">${projectName}</h1>\r\n        <div class=\"tasks-list\" id=\"tasks-list\"></div>`;\r\n\r\n    if (projectName !== 'Today' && projectName !== 'This week') {\r\n      projectPreview.innerHTML += `\r\n        <button class=\"button-add-task\" id=\"button-add-task\">\r\n          <i class=\"fas fa-plus\"></i>\r\n          Add Task\r\n        </button>\r\n        <div class=\"add-task-popup\" id=\"add-task-popup\">\r\n          <input\r\n            class=\"input-add-task-popup\"\r\n            id=\"input-add-task-popup\"\r\n            type=\"text\"\r\n          />\r\n          <div class=\"add-task-popup-buttons\">\r\n            <button class=\"button-add-task-popup\" id=\"button-add-task-popup\">\r\n              Add\r\n            </button>\r\n            <button\r\n              class=\"button-cancel-task-popup\"\r\n              id=\"button-cancel-task-popup\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>`;\r\n    }\r\n\r\n    UI.loadTasks(projectName);\r\n  }\r\n\r\n  // CREATING CONTENT\r\n\r\n  static createProject(name) {\r\n    const userProjects = document.getElementById('projects-list');\r\n    userProjects.innerHTML += ` \r\n      <button class=\"button-project\" data-project-button>\r\n        <div class=\"left-project-panel\">\r\n          <i class=\"fas fa-tasks\"></i>\r\n          <span>${name}</span>\r\n        </div>\r\n        <div class=\"right-project-panel\">\r\n          <i class=\"fas fa-times\"></i>\r\n        </div>\r\n      </button>`;\r\n\r\n    UI.initProjectButtons();\r\n  }\r\n\r\n  static createTask(name, dueDate) {\r\n    const tasksList = document.getElementById('tasks-list');\r\n    tasksList.innerHTML += `\r\n      <button class=\"button-task\" data-task-button>\r\n        <div class=\"left-task-panel\">\r\n          <i class=\"far fa-circle\"></i>\r\n          <p class=\"task-content\">${name}</p>\r\n          <input type=\"text\" class=\"input-task-name\" data-input-task-name>\r\n        </div>\r\n        <div class=\"right-task-panel\">\r\n          <p class=\"due-date\" id=\"due-date\">${dueDate}</p>\r\n          <input type=\"date\" class=\"input-due-date\" data-input-due-date>\r\n          <i class=\"fas fa-times\"></i>\r\n        </div>\r\n      </button>`;\r\n\r\n    UI.initTaskButtons();\r\n  }\r\n\r\n  static clear() {\r\n    UI.clearProjectPreview();\r\n    UI.clearProjects();\r\n    UI.clearTasks();\r\n  }\r\n\r\n  static clearProjectPreview() {\r\n    const projectPreview = document.getElementById('project-preview');\r\n    projectPreview.textContent = '';\r\n  }\r\n\r\n  static clearProjects() {\r\n    const projectsList = document.getElementById('projects-list');\r\n    projectsList.textContent = '';\r\n  }\r\n\r\n  static clearTasks() {\r\n    const tasksList = document.getElementById('tasks-list');\r\n    tasksList.textContent = '';\r\n  }\r\n\r\n  static closeAllPopups() {\r\n    UI.closeAddProjectPopup();\r\n    if (document.getElementById('button-add-task')) {\r\n      UI.closeAddTaskPopup();\r\n    }\r\n    if (\r\n      document.getElementById('tasks-list')\r\n      && document.getElementById('tasks-list').innerHTML !== ''\r\n    ) {\r\n      UI.closeAllInputs();\r\n    }\r\n  }\r\n\r\n  static closeAllInputs() {\r\n    const taskButtons = document.querySelectorAll('[data-task-button]');\r\n\r\n    taskButtons.forEach((button) => {\r\n      UI.closeRenameInput(button);\r\n      UI.closeSetDateInput(button);\r\n    });\r\n  }\r\n\r\n  static handleKeyboard(e) {\r\n    if (e.key === 'Escape') UI.closeAllPopups();\r\n  }\r\n\r\n  // PROJECT ADD EVENT LISTENERS\r\n\r\n  static initAddProjectButtons() {\r\n    const addProjectButton = document.getElementById('button-add-project');\r\n    const addProjectPopupButton = document.getElementById(\r\n      'button-add-project-popup',\r\n    );\r\n    const cancelProjectPopupButton = document.getElementById(\r\n      'button-cancel-project-popup',\r\n    );\r\n    const addProjectPopupInput = document.getElementById(\r\n      'input-add-project-popup',\r\n    );\r\n\r\n    addProjectButton.addEventListener('click', UI.openAddProjectPopup);\r\n    addProjectPopupButton.addEventListener('click', UI.addProject);\r\n    cancelProjectPopupButton.addEventListener('click', UI.closeAddProjectPopup);\r\n    addProjectPopupInput.addEventListener(\r\n      'keypress',\r\n      UI.handleAddProjectPopupInput,\r\n    );\r\n  }\r\n\r\n  static openAddProjectPopup() {\r\n    const addProjectPopup = document.getElementById('add-project-popup');\r\n    const addProjectButton = document.getElementById('button-add-project');\r\n\r\n    UI.closeAllPopups();\r\n    addProjectPopup.classList.add('active');\r\n    addProjectButton.classList.add('active');\r\n  }\r\n\r\n  static closeAddProjectPopup() {\r\n    const addProjectPopup = document.getElementById('add-project-popup');\r\n    const addProjectButton = document.getElementById('button-add-project');\r\n    const addProjectPopupInput = document.getElementById(\r\n      'input-add-project-popup',\r\n    );\r\n\r\n    addProjectPopup.classList.remove('active');\r\n    addProjectButton.classList.remove('active');\r\n    addProjectPopupInput.value = '';\r\n  }\r\n\r\n  static addProject() {\r\n    const addProjectPopupInput = document.getElementById(\r\n      'input-add-project-popup',\r\n    );\r\n    const projectName = addProjectPopupInput.value;\r\n\r\n    if (projectName === '') {\r\n      alert(\"Project name can't be empty\");\r\n      return;\r\n    }\r\n\r\n    if (_storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList().contains(projectName)) {\r\n      addProjectPopupInput.value = '';\r\n      alert('Project names must be different');\r\n      return;\r\n    }\r\n\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.addProject(new _project_prototype__WEBPACK_IMPORTED_MODULE_1__.default(projectName));\r\n    UI.createProject(projectName);\r\n    UI.closeAddProjectPopup();\r\n  }\r\n\r\n  static handleAddProjectPopupInput(e) {\r\n    if (e.key === 'Enter') UI.addProject();\r\n  }\r\n\r\n  // PROJECT EVENT LISTENERS\r\n\r\n  static initProjectButtons() {\r\n    const inboxProjectsButton = document.getElementById(\r\n      'button-inbox-projects',\r\n    );\r\n    const todayProjectsButton = document.getElementById(\r\n      'button-today-projects',\r\n    );\r\n    const weekProjectsButton = document.getElementById('button-week-projects');\r\n    const projectButtons = document.querySelectorAll('[data-project-button]');\r\n    const openNavButton = document.getElementById('button-open-nav');\r\n\r\n    inboxProjectsButton.addEventListener('click', UI.openInboxTasks);\r\n    todayProjectsButton.addEventListener('click', UI.openTodayTasks);\r\n    weekProjectsButton.addEventListener('click', UI.openWeekTasks);\r\n    projectButtons.forEach((projectButton) => projectButton.addEventListener('click', UI.handleProjectButton));\r\n    openNavButton.addEventListener('click', UI.openNav);\r\n  }\r\n\r\n  static openInboxTasks() {\r\n    UI.openProject('Inbox', this);\r\n  }\r\n\r\n  static openTodayTasks() {\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.updateTodayProject();\r\n    UI.openProject('Today', this);\r\n  }\r\n\r\n  static openWeekTasks() {\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.updateWeekProject();\r\n    UI.openProject('This week', this);\r\n  }\r\n\r\n  static handleProjectButton(e) {\r\n    const projectName = this.children[0].children[1].textContent;\r\n\r\n    if (e.target.classList.contains('fa-times')) {\r\n      UI.deleteProject(projectName, this);\r\n      return;\r\n    }\r\n\r\n    UI.openProject(projectName, this);\r\n  }\r\n\r\n  static openProject(projectName, projectButton) {\r\n    const defaultProjectButtons = document.querySelectorAll(\r\n      '.button-default-project',\r\n    );\r\n    const projectButtons = document.querySelectorAll('.button-project');\r\n    const buttons = [...defaultProjectButtons, ...projectButtons];\r\n\r\n    buttons.forEach((button) => button.classList.remove('active'));\r\n    projectButton.classList.add('active');\r\n    UI.closeAddProjectPopup();\r\n    UI.loadProjectContent(projectName);\r\n  }\r\n\r\n  static deleteProject(projectName, button) {\r\n    if (button.classList.contains('active')) UI.clearProjectPreview();\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.deleteProject(projectName);\r\n    UI.clearProjects();\r\n    UI.loadProjects();\r\n  }\r\n\r\n  static openNav() {\r\n    const nav = document.getElementById('nav');\r\n\r\n    UI.closeAllPopups();\r\n    nav.classList.toggle('active');\r\n  }\r\n\r\n  // ADD TASK EVENT LISTENERS\r\n\r\n  static initAddTaskButtons() {\r\n    const addTaskButton = document.getElementById('button-add-task');\r\n    const addTaskPopupButton = document.getElementById('button-add-task-popup');\r\n    const cancelTaskPopupButton = document.getElementById(\r\n      'button-cancel-task-popup',\r\n    );\r\n    const addTaskPopupInput = document.getElementById('input-add-task-popup');\r\n\r\n    addTaskButton.addEventListener('click', UI.openAddTaskPopup);\r\n    addTaskPopupButton.addEventListener('click', UI.addTask);\r\n    cancelTaskPopupButton.addEventListener('click', UI.closeAddTaskPopup);\r\n    addTaskPopupInput.addEventListener('keypress', UI.handleAddTaskPopupInput);\r\n  }\r\n\r\n  static openAddTaskPopup() {\r\n    const addTaskPopup = document.getElementById('add-task-popup');\r\n    const addTaskButton = document.getElementById('button-add-task');\r\n\r\n    UI.closeAllPopups();\r\n    addTaskPopup.classList.add('active');\r\n    addTaskButton.classList.add('active');\r\n  }\r\n\r\n  static closeAddTaskPopup() {\r\n    const addTaskPopup = document.getElementById('add-task-popup');\r\n    const addTaskButton = document.getElementById('button-add-task');\r\n    const addTaskInput = document.getElementById('input-add-task-popup');\r\n\r\n    addTaskPopup.classList.remove('active');\r\n    addTaskButton.classList.remove('active');\r\n    addTaskInput.value = '';\r\n  }\r\n\r\n  static addTask() {\r\n    const projectName = document.getElementById('project-name').textContent;\r\n    const addTaskPopupInput = document.getElementById('input-add-task-popup');\r\n    const taskName = addTaskPopupInput.value;\r\n\r\n    if (taskName === '') {\r\n      alert(\"Task name can't be empty\");\r\n      return;\r\n    }\r\n    if (_storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList().getProject(projectName).contains(taskName)) {\r\n      alert('Task names must be different');\r\n      addTaskPopupInput.value = '';\r\n      return;\r\n    }\r\n\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.addTask(projectName, new _tasks__WEBPACK_IMPORTED_MODULE_2__.default(taskName));\r\n    UI.createTask(taskName, 'No date');\r\n    UI.closeAddTaskPopup();\r\n  }\r\n\r\n  static handleAddTaskPopupInput(e) {\r\n    if (e.key === 'Enter') UI.addTask();\r\n  }\r\n\r\n  // TASK EVENT LISTENERS\r\n\r\n  static initTaskButtons() {\r\n    const taskButtons = document.querySelectorAll('[data-task-button]');\r\n    const taskNameInputs = document.querySelectorAll('[data-input-task-name');\r\n    const dueDateInputs = document.querySelectorAll('[data-input-due-date');\r\n\r\n    taskButtons.forEach((taskButton) => taskButton.addEventListener('click', UI.handleTaskButton));\r\n    taskNameInputs.forEach((taskNameInput) => taskNameInput.addEventListener('keypress', UI.renameTask));\r\n    dueDateInputs.forEach((dueDateInput) => dueDateInput.addEventListener('change', UI.setTaskDate));\r\n  }\r\n\r\n  static handleTaskButton(e) {\r\n    if (e.target.classList.contains('fa-circle')) {\r\n      UI.setTaskCompleted(this);\r\n      return;\r\n    }\r\n    if (e.target.classList.contains('fa-times')) {\r\n      UI.deleteTask(this);\r\n      return;\r\n    }\r\n    if (e.target.classList.contains('task-content')) {\r\n      UI.openRenameInput(this);\r\n      return;\r\n    }\r\n    if (e.target.classList.contains('due-date')) {\r\n      UI.openSetDateInput(this);\r\n    }\r\n  }\r\n\r\n  static setTaskCompleted(taskButton) {\r\n    const projectName = document.getElementById('project-name').textContent;\r\n    const taskName = taskButton.children[0].children[1].textContent;\r\n\r\n    if (projectName === 'Today' || projectName === 'This week') {\r\n      const mainProjectName = taskName.split('(')[1].split(')')[0];\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.deleteTask(mainProjectName, taskName);\r\n    }\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.deleteTask(projectName, taskName);\r\n    UI.clearTasks();\r\n    UI.loadTasks(projectName);\r\n  }\r\n\r\n  static deleteTask(taskButton) {\r\n    const projectName = document.getElementById('project-name').textContent;\r\n    const taskName = taskButton.children[0].children[1].textContent;\r\n\r\n    if (projectName === 'Today' || projectName === 'This week') {\r\n      const mainProjectName = taskName.split('(')[1].split(')')[0];\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.deleteTask(mainProjectName, taskName);\r\n    }\r\n    _storage__WEBPACK_IMPORTED_MODULE_0__.default.deleteTask(projectName, taskName);\r\n    UI.clearTasks();\r\n    UI.loadTasks(projectName);\r\n  }\r\n\r\n  static openRenameInput(taskButton) {\r\n    const taskNamePara = taskButton.children[0].children[1];\r\n    const taskName = taskNamePara.textContent;\r\n    const taskNameInput = taskButton.children[0].children[2];\r\n\r\n    UI.closeAllPopups();\r\n    taskNamePara.classList.add('active');\r\n    taskNameInput.classList.add('active');\r\n    taskNameInput.value = taskName;\r\n  }\r\n\r\n  static closeRenameInput(taskButton) {\r\n    const taskName = taskButton.children[0].children[1];\r\n    const taskNameInput = taskButton.children[0].children[2];\r\n\r\n    taskName.classList.remove('active');\r\n    taskNameInput.classList.remove('active');\r\n    taskNameInput.value = '';\r\n  }\r\n\r\n  static renameTask(e) {\r\n    if (e.key !== 'Enter') return;\r\n\r\n    const projectName = document.getElementById('project-name').textContent;\r\n    const taskName = this.previousElementSibling.textContent;\r\n    const newTaskName = this.value;\r\n\r\n    if (newTaskName === '') {\r\n      alert(\"Task name can't be empty\");\r\n      return;\r\n    }\r\n\r\n    if (_storage__WEBPACK_IMPORTED_MODULE_0__.default.getTodoList().getProject(projectName).contains(newTaskName)) {\r\n      this.value = '';\r\n      alert('Task names must be different');\r\n      return;\r\n    }\r\n\r\n    if (projectName === 'Today' || projectName === 'This week') {\r\n      const mainProjectName = taskName.split('(')[1].split(')')[0];\r\n      const mainTaskName = taskName.split(' ')[0];\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.renameTask(\r\n        projectName,\r\n        taskName,\r\n        `${newTaskName} (${mainProjectName})`,\r\n      );\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.renameTask(mainProjectName, mainTaskName, newTaskName);\r\n    } else {\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.renameTask(projectName, taskName, newTaskName);\r\n    }\r\n    UI.clearTasks();\r\n    UI.loadTasks(projectName);\r\n    UI.closeRenameInput(this.parentNode.parentNode);\r\n  }\r\n\r\n  static openSetDateInput(taskButton) {\r\n    const dueDate = taskButton.children[1].children[0];\r\n    const dueDateInput = taskButton.children[1].children[1];\r\n\r\n    UI.closeAllPopups();\r\n    dueDate.classList.add('active');\r\n    dueDateInput.classList.add('active');\r\n  }\r\n\r\n  static closeSetDateInput(taskButton) {\r\n    const dueDate = taskButton.children[1].children[0];\r\n    const dueDateInput = taskButton.children[1].children[1];\r\n\r\n    dueDate.classList.remove('active');\r\n    dueDateInput.classList.remove('active');\r\n  }\r\n\r\n  static setTaskDate() {\r\n    const taskButton = this.parentNode.parentNode;\r\n    const projectName = document.getElementById('project-name').textContent;\r\n    const taskName = taskButton.children[0].children[1].textContent;\r\n    const newDueDate = (0,date_fns__WEBPACK_IMPORTED_MODULE_3__.format)(new Date(this.value), 'dd/MM/yyyy');\r\n\r\n    if (projectName === 'Today' || projectName === 'This week') {\r\n      const mainProjectName = taskName.split('(')[1].split(')')[0];\r\n      const mainTaskName = taskName.split(' (')[0];\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.setTaskDate(projectName, taskName, newDueDate);\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.setTaskDate(mainProjectName, mainTaskName, newDueDate);\r\n      if (projectName === 'Today') {\r\n        _storage__WEBPACK_IMPORTED_MODULE_0__.default.updateTodayProject();\r\n      } else {\r\n        _storage__WEBPACK_IMPORTED_MODULE_0__.default.updateWeekProject();\r\n      }\r\n    } else {\r\n      _storage__WEBPACK_IMPORTED_MODULE_0__.default.setTaskDate(projectName, taskName, newDueDate);\r\n    }\r\n    UI.clearTasks();\r\n    UI.loadTasks(projectName);\r\n    UI.closeSetDateInput(taskButton);\r\n  }\r\n}\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/modules/interface.js?");

/***/ }),

/***/ "./src/javascript/modules/project_prototype.js":
/*!*****************************************************!*\
  !*** ./src/javascript/modules/project_prototype.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Project\n/* harmony export */ });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/index.js\");\n\r\n\r\nclass Project {\r\n  constructor(name) {\r\n    this.name = name;\r\n    this.tasks = [];\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  setTasks(tasks) {\r\n    this.tasks = tasks;\r\n  }\r\n\r\n  getTasks() {\r\n    return this.tasks;\r\n  }\r\n\r\n  getTask(taskName) {\r\n    return this.tasks.find((task) => task.getName() === taskName);\r\n  }\r\n\r\n  contains(taskName) {\r\n    return this.tasks.some((task) => task.getName() === taskName);\r\n  }\r\n\r\n  addTask(task) {\r\n    if (this.tasks.indexOf(task) > 0) return;\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  deleteTask(taskName) {\r\n    const taskToDelete = this.tasks.find((task) => task.getName() === taskName);\r\n    this.tasks.splice(this.tasks.indexOf(taskToDelete), 1);\r\n  }\r\n\r\n  getTasksToday() {\r\n    return this.tasks.filter((task) => {\r\n      const taskDate = new Date(task.getDateFormatted());\r\n      return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.isToday)((0,date_fns__WEBPACK_IMPORTED_MODULE_0__.toDate)(taskDate));\r\n    });\r\n  }\r\n\r\n  getTasksThisWeek() {\r\n    return this.tasks.filter((task) => {\r\n      const taskDate = new Date(task.getDateFormatted());\r\n      return (0,date_fns__WEBPACK_IMPORTED_MODULE_0__.isThisWeek)((0,date_fns__WEBPACK_IMPORTED_MODULE_0__.subDays)((0,date_fns__WEBPACK_IMPORTED_MODULE_0__.toDate)(taskDate), 1));\r\n    });\r\n  }\r\n}\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/modules/project_prototype.js?");

/***/ }),

/***/ "./src/javascript/modules/storage.js":
/*!*******************************************!*\
  !*** ./src/javascript/modules/storage.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Storage\n/* harmony export */ });\n/* harmony import */ var _project_prototype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./project_prototype */ \"./src/javascript/modules/project_prototype.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tasks */ \"./src/javascript/modules/tasks.js\");\n/* harmony import */ var _todolistobject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./todolistobject */ \"./src/javascript/modules/todolistobject.js\");\n\r\n\r\n\r\n\r\nclass Storage {\r\n  static saveTodoList(data) {\r\n    localStorage.setItem('todoList', JSON.stringify(data));\r\n  }\r\n\r\n  static getTodoList() {\r\n    // local storage doesn't store type of data so we have to convert it\r\n\r\n    const todoList = Object.assign(\r\n      new _todolistobject__WEBPACK_IMPORTED_MODULE_2__.default(),\r\n      JSON.parse(localStorage.getItem('todoList')),\r\n    );\r\n\r\n    todoList.setProjects(\r\n      todoList\r\n        .getProjects()\r\n        .map((project) => Object.assign(new _project_prototype__WEBPACK_IMPORTED_MODULE_0__.default(), project)),\r\n    );\r\n\r\n    todoList\r\n      .getProjects()\r\n      .forEach((project) => project.setTasks(\r\n        project.getTasks().map((task) => Object.assign(new _tasks__WEBPACK_IMPORTED_MODULE_1__.default(), task)),\r\n      ));\r\n\r\n    return todoList;\r\n  }\r\n\r\n  static addProject(project) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.addProject(project);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static deleteProject(projectName) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.deleteProject(projectName);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static addTask(projectName, task) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.getProject(projectName).addTask(task);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static deleteTask(projectName, taskName) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.getProject(projectName).deleteTask(taskName);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static renameTask(projectName, taskName, newTaskName) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.getProject(projectName).getTask(taskName).setName(newTaskName);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static setTaskDate(projectName, taskName, newDueDate) {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.getProject(projectName).getTask(taskName).setDate(newDueDate);\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static updateTodayProject() {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.updateTodayProject();\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n\r\n  static updateWeekProject() {\r\n    const todoList = Storage.getTodoList();\r\n    todoList.updateWeekProject();\r\n    Storage.saveTodoList(todoList);\r\n  }\r\n}\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/modules/storage.js?");

/***/ }),

/***/ "./src/javascript/modules/tasks.js":
/*!*****************************************!*\
  !*** ./src/javascript/modules/tasks.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ Task\n/* harmony export */ });\nclass Task {\r\n  constructor(name, dueDate = 'No date') {\r\n    this.name = name;\r\n    this.dueDate = dueDate;\r\n  }\r\n\r\n  setName(name) {\r\n    this.name = name;\r\n  }\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  setDate(dueDate) {\r\n    this.dueDate = dueDate;\r\n  }\r\n\r\n  getDate() {\r\n    return this.dueDate;\r\n  }\r\n\r\n  getDateFormatted() {\r\n    const day = this.dueDate.split('/')[0];\r\n    const month = this.dueDate.split('/')[1];\r\n    const year = this.dueDate.split('/')[2];\r\n    return `${month}/${day}/${year}`;\r\n  }\r\n}\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/modules/tasks.js?");

/***/ }),

/***/ "./src/javascript/modules/todolistobject.js":
/*!**************************************************!*\
  !*** ./src/javascript/modules/todolistobject.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => /* binding */ TodoList\n/* harmony export */ });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/index.js\");\n/* harmony import */ var _project_prototype__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./project_prototype */ \"./src/javascript/modules/project_prototype.js\");\n/* harmony import */ var _tasks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tasks */ \"./src/javascript/modules/tasks.js\");\n\r\n\r\n\r\n\r\nclass TodoList {\r\n  constructor() {\r\n    this.projects = [];\r\n    this.projects.push(new _project_prototype__WEBPACK_IMPORTED_MODULE_0__.default('Inbox'));\r\n    this.projects.push(new _project_prototype__WEBPACK_IMPORTED_MODULE_0__.default('Today'));\r\n    this.projects.push(new _project_prototype__WEBPACK_IMPORTED_MODULE_0__.default('This week'));\r\n  }\r\n\r\n  setProjects(projects) {\r\n    this.projects = projects;\r\n  }\r\n\r\n  getProjects() {\r\n    return this.projects;\r\n  }\r\n\r\n  getProject(projectName) {\r\n    return this.projects.find((project) => project.getName() === projectName);\r\n  }\r\n\r\n  contains(projectName) {\r\n    return this.projects.some((project) => project.getName() === projectName);\r\n  }\r\n\r\n  addProject(project) {\r\n    if (this.projects.indexOf(project) > 0) return;\r\n    this.projects.push(project);\r\n  }\r\n\r\n  deleteProject(projectName) {\r\n    const projectToDelete = this.projects.find(\r\n      (project) => project.getName() === projectName,\r\n    );\r\n    this.projects.splice(this.projects.indexOf(projectToDelete), 1);\r\n  }\r\n\r\n  updateTodayProject() {\r\n    this.getProject('Today').tasks = [];\r\n\r\n    this.projects.forEach((project) => {\r\n      if (project.getName() === 'Today' || project.getName() === 'This week') return;\r\n\r\n      const todayTasks = project.getTasksToday();\r\n      todayTasks.forEach((task) => {\r\n        const taskName = `${task.getName()} (${project.getName()})`;\r\n        this.getProject('Today').addTask(new _tasks__WEBPACK_IMPORTED_MODULE_1__.default(taskName, task.getDate()));\r\n      });\r\n    });\r\n  }\r\n\r\n  updateWeekProject() {\r\n    this.getProject('This week').tasks = [];\r\n\r\n    this.projects.forEach((project) => {\r\n      if (project.getName() === 'Today' || project.getName() === 'This week') return;\r\n\r\n      const weekTasks = project.getTasksThisWeek();\r\n      weekTasks.forEach((task) => {\r\n        const taskName = `${task.getName()} (${project.getName()})`;\r\n        this.getProject('This week').addTask(\r\n          new _tasks__WEBPACK_IMPORTED_MODULE_1__.default(taskName, task.getDate()),\r\n        );\r\n      });\r\n    });\r\n\r\n    this.getProject('This week').setTasks(\r\n      this.getProject('This week')\r\n        .getTasks()\r\n        .sort((taskA, taskB) => (0,date_fns__WEBPACK_IMPORTED_MODULE_2__.compareAsc)(\r\n          (0,date_fns__WEBPACK_IMPORTED_MODULE_2__.toDate)(new Date(taskA.getDateFormatted())),\r\n          (0,date_fns__WEBPACK_IMPORTED_MODULE_2__.toDate)(new Date(taskB.getDateFormatted())),\r\n        )),\r\n    );\r\n  }\r\n}\n\n//# sourceURL=webpack://Todo-List-App/./src/javascript/modules/todolistobject.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/javascript/index.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;